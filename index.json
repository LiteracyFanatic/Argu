[{"uri":"http://fsprojects.github.io/Argu//reference/index.html","title":"API Reference","content":"ArguAttributes \nArgumentParserUtils \nCliPrefix \nAppSettingsConfigurationReader \nArguException \nArguParseException \nArgumentCaseInfo \nArgumentParser \nArgumentParser<'Template> \nArgumentType \nCliPosition \nConfigurationReader \nCustomAssignmentSeparator \nDictionaryConfigurationReader \nEnvironmentVariableConfigurationReader \nErrorCode \nExceptionExiter \nFunctionConfigurationReader \nIArgParserTemplate \nIArgumentParserVisitor<'R> \nIConfigurationReader \nIExiter \nNullConfigurationReader \nParseResults<'Template> \nParseSource \nProcessExiter \nAltCommandLineAttribute \nAppSettingsSeparatorAttribute \nCliPositionAttribute \nCliPrefixAttribute \nColonAssignmentAttribute \nColonAssignmentOrSpacedAttribute \nCustomAppSettingsAttribute \nCustomAssignmentAttribute \nCustomAssignmentOrSpacedAttribute \nCustomCommandLineAttribute \nDisableHelpFlagsAttribute \nEqualsAssignmentAttribute \nEqualsAssignmentOrSpacedAttribute \nExactlyOnceAttribute \nFirstAttribute \nGatherAllSourcesAttribute \nGatherUnrecognizedAttribute \nHelpDescriptionAttribute \nHelpFlagsAttribute \nHiddenAttribute \nInheritAttribute \nLastAttribute \nMainCommandAttribute \nMandatoryAttribute \nNoAppSettingsAttribute \nNoCommandLineAttribute \nParseCSVAttribute \nPrintLabelsAttribute \nRequireSubcommandAttribute \nRestAttribute \nSubCommandAttribute \nUniqueAttribute"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes.html","title":"ArguAttributes","content":"ArguAttributes \n<p class='summary'>\n Argu Attribute declaration module\n</p> \nArguAttributes.AltCommandLineAttribute \nAltCommandLineAttribute \nArguAttributes.AppSettingsSeparatorAttribute \nAppSettingsSeparatorAttribute \nArguAttributes.CliPositionAttribute \nCliPositionAttribute \nArguAttributes.CliPrefixAttribute \nCliPrefixAttribute \nArguAttributes.ColonAssignmentAttribute \nColonAssignmentAttribute \nArguAttributes.ColonAssignmentOrSpacedAttribute \nColonAssignmentOrSpacedAttribute \nArguAttributes.CustomAppSettingsAttribute \nCustomAppSettingsAttribute \nArguAttributes.CustomAssignmentAttribute \nCustomAssignmentAttribute \nArguAttributes.CustomAssignmentOrSpacedAttribute \nCustomAssignmentOrSpacedAttribute \nArguAttributes.CustomCommandLineAttribute \nCustomCommandLineAttribute \nArguAttributes.DisableHelpFlagsAttribute \nDisableHelpFlagsAttribute \nArguAttributes.EqualsAssignmentAttribute \nEqualsAssignmentAttribute \nArguAttributes.EqualsAssignmentOrSpacedAttribute \nEqualsAssignmentOrSpacedAttribute \nArguAttributes.ExactlyOnceAttribute \nExactlyOnceAttribute \nArguAttributes.FirstAttribute \nFirstAttribute \nArguAttributes.GatherAllSourcesAttribute \nGatherAllSourcesAttribute \nArguAttributes.GatherUnrecognizedAttribute \nGatherUnrecognizedAttribute \nArguAttributes.HelpDescriptionAttribute \nHelpDescriptionAttribute \nArguAttributes.HelpFlagsAttribute \nHelpFlagsAttribute \nArguAttributes.HiddenAttribute \nHiddenAttribute \nArguAttributes.InheritAttribute \nInheritAttribute \nArguAttributes.LastAttribute \nLastAttribute \nArguAttributes.MainCommandAttribute \nMainCommandAttribute \nArguAttributes.MandatoryAttribute \nMandatoryAttribute \nArguAttributes.NoAppSettingsAttribute \nNoAppSettingsAttribute \nArguAttributes.NoCommandLineAttribute \nNoCommandLineAttribute \nArguAttributes.ParseCSVAttribute \nParseCSVAttribute \nArguAttributes.PrintLabelsAttribute \nPrintLabelsAttribute \nArguAttributes.RequireSubcommandAttribute \nRequireSubcommandAttribute \nArguAttributes.RestAttribute \nRestAttribute \nArguAttributes.SubCommandAttribute \nSubCommandAttribute \nArguAttributes.UniqueAttribute \nUniqueAttribute"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparserutils.html","title":"ArgumentParserUtils","content":"ArgumentParserUtils \n \nArgumentParserUtils.toParseResults \ntoParseResults \nArgumentParserUtils.tagOf \ntagOf \nArgumentParserUtils.Parser \nParser \nArgumentParserUtils.Parser \nParser"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparserutils.html#toParseResults","title":"ArgumentParserUtils.toParseResults","content":"ArgumentParserUtils.toParseResults \ntoParseResults \n<p class='summary'>\n converts a sequence of inputs to a ParseResults instance\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparserutils.html#tagOf","title":"ArgumentParserUtils.tagOf","content":"ArgumentParserUtils.tagOf \ntagOf \n<p class='summary'>\n gets the F# union tag representation of given argument instance\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-cliprefix.html","title":"CliPrefix","content":"CliPrefix \n<p class='summary'>\n Predefined CLI prefixes to be added\n</p> \nCliPrefix.None \nNone \nCliPrefix.Dash \nDash \nCliPrefix.DoubleDash \nDoubleDash"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-cliprefix.html#None","title":"CliPrefix.None","content":"CliPrefix.None \nNone \n<p class='summary'>\n No Cli Prefix\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-cliprefix.html#Dash","title":"CliPrefix.Dash","content":"CliPrefix.Dash \nDash \n<p class='summary'>\n Single Dash prefix '-'\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-cliprefix.html#DoubleDash","title":"CliPrefix.DoubleDash","content":"CliPrefix.DoubleDash \nDoubleDash \n<p class='summary'>\n Double Dash prefix '--'\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-appsettingsconfigurationreader.html","title":"AppSettingsConfigurationReader","content":"AppSettingsConfigurationReader \n<p class='summary'>\n AppSettings XML configuration reader\n</p> \nAppSettingsConfigurationReader.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-appsettingsconfigurationreader.html#( .ctor )","title":"AppSettingsConfigurationReader.( .ctor )","content":"AppSettingsConfigurationReader.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguexception.html","title":"ArguException","content":"ArguException \n<p class='summary'>\n Exception raised by Argu\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguparseexception.html","title":"ArguParseException","content":"ArguParseException \n<p class='summary'>\n Parse exception raised by Argu\n</p> \nArguParseException.ErrorCode \nErrorCode"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguparseexception.html#ErrorCode","title":"ArguParseException.ErrorCode","content":"ArguParseException.ErrorCode \nErrorCode \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html","title":"ArgumentCaseInfo","content":"ArgumentCaseInfo \n<p class='summary'>\n Union argument metadata\n</p> \nArgumentCaseInfo.Name \nName \nArgumentCaseInfo.UnionCaseInfo \nUnionCaseInfo \nArgumentCaseInfo.ArgumentType \nArgumentType \nArgumentCaseInfo.CommandLineNames \nCommandLineNames \nArgumentCaseInfo.AppSettingsName \nAppSettingsName \nArgumentCaseInfo.Description \nDescription \nArgumentCaseInfo.AppSettingsSeparators \nAppSettingsSeparators \nArgumentCaseInfo.AppSettingsSplitOptions \nAppSettingsSplitOptions \nArgumentCaseInfo.CliPosition \nCliPosition \nArgumentCaseInfo.IsMainCommand \nIsMainCommand \nArgumentCaseInfo.IsRest \nIsRest \nArgumentCaseInfo.CustomAssignmentSeparator \nCustomAssignmentSeparator \nArgumentCaseInfo.AppSettingsCSV \nAppSettingsCSV \nArgumentCaseInfo.IsMandatory \nIsMandatory \nArgumentCaseInfo.IsUnique \nIsUnique \nArgumentCaseInfo.IsHidden \nIsHidden \nArgumentCaseInfo.IsGatherUnrecognized \nIsGatherUnrecognized \nArgumentCaseInfo.GatherAllSources \nGatherAllSources"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#Name","title":"ArgumentCaseInfo.Name","content":"ArgumentCaseInfo.Name \nName \n<p class='summary'>\n Human readable name identifier\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#UnionCaseInfo","title":"ArgumentCaseInfo.UnionCaseInfo","content":"ArgumentCaseInfo.UnionCaseInfo \nUnionCaseInfo \n<p class='summary'>\n Union case reflection identifier\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#ArgumentType","title":"ArgumentCaseInfo.ArgumentType","content":"ArgumentCaseInfo.ArgumentType \nArgumentType \n<p class='summary'>\n Type of argument parser\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#CommandLineNames","title":"ArgumentCaseInfo.CommandLineNames","content":"ArgumentCaseInfo.CommandLineNames \nCommandLineNames \n<p class='summary'>\n head element denotes primary command line arg\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#AppSettingsName","title":"ArgumentCaseInfo.AppSettingsName","content":"ArgumentCaseInfo.AppSettingsName \nAppSettingsName \n<p class='summary'>\n name used in AppSettings\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#Description","title":"ArgumentCaseInfo.Description","content":"ArgumentCaseInfo.Description \nDescription \n<p class='summary'>\n Description of the parameter\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#AppSettingsSeparators","title":"ArgumentCaseInfo.AppSettingsSeparators","content":"ArgumentCaseInfo.AppSettingsSeparators \nAppSettingsSeparators \n<p class='summary'>\n AppSettings parameter separator\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#AppSettingsSplitOptions","title":"ArgumentCaseInfo.AppSettingsSplitOptions","content":"ArgumentCaseInfo.AppSettingsSplitOptions \nAppSettingsSplitOptions \n<p class='summary'>\n AppSettings parameter split options\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#CliPosition","title":"ArgumentCaseInfo.CliPosition","content":"ArgumentCaseInfo.CliPosition \nCliPosition \n<p class='summary'>\n Mandated Cli position for the argument\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#IsMainCommand","title":"ArgumentCaseInfo.IsMainCommand","content":"ArgumentCaseInfo.IsMainCommand \nIsMainCommand \n<p class='summary'>\n Specifies that this argument is the main CLI command\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#IsRest","title":"ArgumentCaseInfo.IsRest","content":"ArgumentCaseInfo.IsRest \nIsRest \n<p class='summary'>\n If specified, should consume remaining tokens from the CLI\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#CustomAssignmentSeparator","title":"ArgumentCaseInfo.CustomAssignmentSeparator","content":"ArgumentCaseInfo.CustomAssignmentSeparator \nCustomAssignmentSeparator \n<p class='summary'>\n Separator token used for EqualsAssignment syntax; e.g. '=' forces '--param=arg' syntax\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#AppSettingsCSV","title":"ArgumentCaseInfo.AppSettingsCSV","content":"ArgumentCaseInfo.AppSettingsCSV \nAppSettingsCSV \n<p class='summary'>\n If specified, multiple parameters can be added in AppSettings in CSV form.\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#IsMandatory","title":"ArgumentCaseInfo.IsMandatory","content":"ArgumentCaseInfo.IsMandatory \nIsMandatory \n<p class='summary'>\n Fails if no argument of this type is specified\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#IsUnique","title":"ArgumentCaseInfo.IsUnique","content":"ArgumentCaseInfo.IsUnique \nIsUnique \n<p class='summary'>\n Specifies that argument should be specified at most once in CLI\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#IsHidden","title":"ArgumentCaseInfo.IsHidden","content":"ArgumentCaseInfo.IsHidden \nIsHidden \n<p class='summary'>\n Hide from Usage\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#IsGatherUnrecognized","title":"ArgumentCaseInfo.IsGatherUnrecognized","content":"ArgumentCaseInfo.IsGatherUnrecognized \nIsGatherUnrecognized \n<p class='summary'>\n Declares that the parameter should gather any unrecognized CLI params\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentcaseinfo.html#GatherAllSources","title":"ArgumentCaseInfo.GatherAllSources","content":"ArgumentCaseInfo.GatherAllSources \nGatherAllSources \n<p class='summary'>\n Combine AppSettings with CLI inputs\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser.html","title":"ArgumentParser","content":"ArgumentParser \n<p class='summary'>\n The Argu type generates an argument parser given a type argument\n that is an F# discriminated union. It can then be used to parse command line arguments\n or XML configuration.\n</p> \nArgumentParser.Accept \nAccept \nArgumentParser.GetArgumentCases \nGetArgumentCases \nArgumentParser.GetSubCommandParsers \nGetSubCommandParsers \nArgumentParser.PrintCommandLineSyntax \nPrintCommandLineSyntax \nArgumentParser.PrintUsage \nPrintUsage \nArgumentParser.ParentInfo \nParentInfo \nArgumentParser.IsSubCommandParser \nIsSubCommandParser \nArgumentParser.HelpTextMessage \nHelpTextMessage \nArgumentParser.HelpFlags \nHelpFlags \nArgumentParser.HelpDescription \nHelpDescription \nArgumentParser.ErrorHandler \nErrorHandler \nArgumentParser.Create \nCreate"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser.html#Accept","title":"ArgumentParser.Accept","content":"ArgumentParser.Accept \nAccept \n<p class='summary'>\n     Enables access to the typed API of an ArgumentParser\n     when template type is unknown.\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>visitor</span></dt><dd><p>Visitor used to access the parser.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser.html#GetArgumentCases","title":"ArgumentParser.GetArgumentCases","content":"ArgumentParser.GetArgumentCases \nGetArgumentCases \n<p class='summary'>\n Gets metadata for all union cases used by parser\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser.html#GetSubCommandParsers","title":"ArgumentParser.GetSubCommandParsers","content":"ArgumentParser.GetSubCommandParsers \nGetSubCommandParsers \n<p class='summary'>\n Gets all subcommand parsers for given parser\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser.html#PrintCommandLineSyntax","title":"ArgumentParser.PrintCommandLineSyntax","content":"ArgumentParser.PrintCommandLineSyntax \nPrintCommandLineSyntax \n<p class='summary'>\n     Prints command line syntax. Useful for generating documentation.\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>programName</span></dt><dd><p>Program name identifier placed at start of syntax string</p></dd><dt><span class='parameter'>usageStringCharacterWidth</span></dt><dd><p>Text width used when formatting the usage string.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser.html#PrintUsage","title":"ArgumentParser.PrintUsage","content":"ArgumentParser.PrintUsage \nPrintUsage \n<p class='summary'>Formats a usage string for the argument parser.</p><h4>Parameters</h4><dl><dt><span class='parameter'>message</span></dt><dd><p>The message to be displayed on top of the usage string.</p></dd><dt><span class='parameter'>programName</span></dt><dd><p>Override the default program name settings.</p></dd><dt><span class='parameter'>hideSyntax</span></dt><dd><p>Do not display 'USAGE: [syntax]' at top of usage string. Defaults to false.</p></dd><dt><span class='parameter'>usageStringCharacterWidth</span></dt><dd><p>Text width used when formatting the usage string.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser.html#ParentInfo","title":"ArgumentParser.ParentInfo","content":"ArgumentParser.ParentInfo \nParentInfo \n<p class='summary'>\n If subcommand parser, gets parent argument metadata\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser.html#IsSubCommandParser","title":"ArgumentParser.IsSubCommandParser","content":"ArgumentParser.IsSubCommandParser \nIsSubCommandParser \n<p class='summary'>\n Returns true if parser corresponds to a subcommand\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser.html#HelpTextMessage","title":"ArgumentParser.HelpTextMessage","content":"ArgumentParser.HelpTextMessage \nHelpTextMessage \n<p class='summary'>\n Gets the message that will be displayed at the top of the help text\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser.html#HelpFlags","title":"ArgumentParser.HelpFlags","content":"ArgumentParser.HelpFlags \nHelpFlags \n<p class='summary'>\n Gets the help flags specified for the CLI parser\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser.html#HelpDescription","title":"ArgumentParser.HelpDescription","content":"ArgumentParser.HelpDescription \nHelpDescription \n<p class='summary'>\n Gets the help description specified for the CLI parser\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser.html#ErrorHandler","title":"ArgumentParser.ErrorHandler","content":"ArgumentParser.ErrorHandler \nErrorHandler \n<p class='summary'>\n Gets the default error handler used by the instance\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser.html#Create","title":"ArgumentParser.Create","content":"ArgumentParser.Create \nCreate \n<p class='summary'>\n     Create a new argument parsing scheme using given 'Template type\n     which must be an F# Discriminated Union.\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>programName</span></dt><dd><p>Program identifier, e.g. 'cat'. Defaults to the current executable name.</p></dd><dt><span class='parameter'>helpTextMessage</span></dt><dd><p>Message that will be displayed at the top of the help text.</p></dd><dt><span class='parameter'>usageStringCharacterWidth</span></dt><dd><p>Text width used when formatting the usage string. Defaults to 80 chars.</p></dd><dt><span class='parameter'>errorHandler</span></dt><dd><p>The implementation of IExiter used for error handling. Exception is default.</p></dd><dt><span class='parameter'>checkStructure</span></dt><dd><p>Indicate if the structure of the arguments discriminated union should be checked for errors.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html","title":"ArgumentParser<'Template>","content":"ArgumentParser<'Template> \n<p class='summary'>\n The Argu type generates an argument parser given a type argument\n that is an F# discriminated union. It can then be used to parse command line arguments\n or XML configuration.\n</p> \nArgumentParser<'Template>.( .ctor ) \n( .ctor ) \nArgumentParser<'Template>.GetArgumentCaseInfo \nGetArgumentCaseInfo \nArgumentParser<'Template>.GetArgumentCaseInfo \nGetArgumentCaseInfo \nArgumentParser<'Template>.GetSubCommandParser \nGetSubCommandParser \nArgumentParser<'Template>.GetTag \nGetTag \nArgumentParser<'Template>.Parse \nParse \nArgumentParser<'Template>.ParseCommandLine \nParseCommandLine \nArgumentParser<'Template>.ParseConfiguration \nParseConfiguration \nArgumentParser<'Template>.PrintAppSettingsArguments \nPrintAppSettingsArguments \nArgumentParser<'Template>.PrintCommandLineArguments \nPrintCommandLineArguments \nArgumentParser<'Template>.PrintCommandLineArgumentsFlat \nPrintCommandLineArgumentsFlat \nArgumentParser<'Template>.ToParseResults \nToParseResults \nArgumentParser<'Template>.CheckStructure \nCheckStructure"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html#( .ctor )","title":"ArgumentParser<'Template>.( .ctor )","content":"ArgumentParser<'Template>.( .ctor ) \n( .ctor ) \n<p class='summary'>\n     Creates a new parser instance based on supplied F# union template.\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>programName</span></dt><dd><p>Program identifier, e.g. 'cat'. Defaults to the current executable name.</p></dd><dt><span class='parameter'>helpTextMessage</span></dt><dd><p>Message that will be displayed at the top of the help text.</p></dd><dt><span class='parameter'>usageStringCharacterWidth</span></dt><dd><p>Text width used when formatting the usage string. Defaults to 80 chars.</p></dd><dt><span class='parameter'>errorHandler</span></dt><dd><p>The implementation of IExiter used for error handling. Exception is default.</p></dd><dt><span class='parameter'>checkStructure</span></dt><dd><p>Indicate if the structure of the arguments discriminated union should be checked for errors.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html#GetArgumentCaseInfo","title":"ArgumentParser<'Template>.GetArgumentCaseInfo","content":"ArgumentParser<'Template>.GetArgumentCaseInfo \nGetArgumentCaseInfo \n<p class='summary'>\n     Gets argument metadata for given union case constructor\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>ctorExpr</span></dt><dd><p>Quoted union case constructor.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html#GetArgumentCaseInfo","title":"ArgumentParser<'Template>.GetArgumentCaseInfo","content":"ArgumentParser<'Template>.GetArgumentCaseInfo \nGetArgumentCaseInfo \n<p class='summary'>\n     Gets argument metadata for given argument instance.\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>value</span></dt><dd><p>Argument instance.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html#GetSubCommandParser","title":"ArgumentParser<'Template>.GetSubCommandParser","content":"ArgumentParser<'Template>.GetSubCommandParser \nGetSubCommandParser \n<p class='summary'>\n     Gets a subparser associated with specific subcommand instance\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>Expression providing the subcommand union constructor.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html#GetTag","title":"ArgumentParser<'Template>.GetTag","content":"ArgumentParser<'Template>.GetTag \nGetTag \n<p class='summary'>\n     Gets the F# union tag representation for given argument\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>value</span></dt><dd><p>Argument instance.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html#Parse","title":"ArgumentParser<'Template>.Parse","content":"ArgumentParser<'Template>.Parse \nParse \n<p class='summary'>Parse both command line args and supplied configuration reader.\n          Results are merged with command line args overriding configuration parameters.</p><h4>Parameters</h4><dl><dt><span class='parameter'>inputs</span></dt><dd><p>The command line input. Taken from System.Environment if not specified.</p></dd><dt><span class='parameter'>configurationReader</span></dt><dd><p>Configuration reader used to source the arguments. Defaults to the AppSettings configuration of the current process.</p></dd><dt><span class='parameter'>ignoreMissing</span></dt><dd><p>Ignore errors caused by the Mandatory attribute. Defaults to false.</p></dd><dt><span class='parameter'>ignoreUnrecognized</span></dt><dd><p>Ignore CLI arguments that do not match the schema. Defaults to false.</p></dd><dt><span class='parameter'>raiseOnUsage</span></dt><dd><p>Treat '--help' parameters as parse errors. Defaults to true.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html#ParseCommandLine","title":"ArgumentParser<'Template>.ParseCommandLine","content":"ArgumentParser<'Template>.ParseCommandLine \nParseCommandLine \n<p class='summary'>Parse command line arguments only.</p><h4>Parameters</h4><dl><dt><span class='parameter'>inputs</span></dt><dd><p>The command line input. Taken from System.Environment if not specified.</p></dd><dt><span class='parameter'>ignoreMissing</span></dt><dd><p>Ignore errors caused by the Mandatory attribute. Defaults to false.</p></dd><dt><span class='parameter'>ignoreUnrecognized</span></dt><dd><p>Ignore CLI arguments that do not match the schema. Defaults to false.</p></dd><dt><span class='parameter'>raiseOnUsage</span></dt><dd><p>Treat '--help' parameters as parse errors. Defaults to true.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html#ParseConfiguration","title":"ArgumentParser<'Template>.ParseConfiguration","content":"ArgumentParser<'Template>.ParseConfiguration \nParseConfiguration \n<p class='summary'>Parse arguments using specified configuration reader only. This defaults to the AppSettings configuration of the current process.</p><h4>Parameters</h4><dl><dt><span class='parameter'>configurationReader</span></dt><dd><p>Configuration reader used to source the arguments. Defaults to the AppSettings configuration of the current process.</p></dd><dt><span class='parameter'>ignoreMissing</span></dt><dd><p>Ignore errors caused by the Mandatory attribute. Defaults to false.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html#PrintAppSettingsArguments","title":"ArgumentParser<'Template>.PrintAppSettingsArguments","content":"ArgumentParser<'Template>.PrintAppSettingsArguments \nPrintAppSettingsArguments \n<p class='summary'>Prints parameters in App.Config format.</p><h4>Parameters</h4><dl><dt><span class='parameter'>args</span></dt><dd><p>The parameters that fill out the XML document.</p></dd><dt><span class='parameter'>printComments</span></dt><dd><p>Print XML comments over every configuration entry.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html#PrintCommandLineArguments","title":"ArgumentParser<'Template>.PrintCommandLineArguments","content":"ArgumentParser<'Template>.PrintCommandLineArguments \nPrintCommandLineArguments \n<p class='summary'>Prints parameters in command line format. Useful for argument string generation.</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html#PrintCommandLineArgumentsFlat","title":"ArgumentParser<'Template>.PrintCommandLineArgumentsFlat","content":"ArgumentParser<'Template>.PrintCommandLineArgumentsFlat \nPrintCommandLineArgumentsFlat \n<p class='summary'>Prints parameters in command line format. Useful for argument string generation.</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html#ToParseResults","title":"ArgumentParser<'Template>.ToParseResults","content":"ArgumentParser<'Template>.ToParseResults \nToParseResults \n<p class='summary'>\n     Converts a sequence of template argument inputs into a ParseResults instance\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>inputs</span></dt><dd><p>Argument input sequence.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumentparser-1.html#CheckStructure","title":"ArgumentParser<'Template>.CheckStructure","content":"ArgumentParser<'Template>.CheckStructure \nCheckStructure \n<p class='summary'>Force a check of the discriminated union structure.</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumenttype.html","title":"ArgumentType","content":"ArgumentType \n<p class='summary'>\n Argument parameter type identifier\n</p> \nArgumentType.Primitive \nPrimitive \nArgumentType.Optional \nOptional \nArgumentType.List \nList \nArgumentType.SubCommand \nSubCommand"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumenttype.html#Primitive","title":"ArgumentType.Primitive","content":"ArgumentType.Primitive \nPrimitive \n<p class='summary'>\n Argument specifies primitive parameters like strings or integers\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumenttype.html#Optional","title":"ArgumentType.Optional","content":"ArgumentType.Optional \nOptional \n<p class='summary'>\n Argument specifies an optional parameter which is primitive\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumenttype.html#List","title":"ArgumentType.List","content":"ArgumentType.List \nList \n<p class='summary'>\n Argument specifies a list of parameters of specific primitive type\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-argumenttype.html#SubCommand","title":"ArgumentType.SubCommand","content":"ArgumentType.SubCommand \nSubCommand \n<p class='summary'>\n Argument specifies a subcommand\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-cliposition.html","title":"CliPosition","content":"CliPosition \n<p class='summary'>\n Cli Position required to place argument\n</p> \nCliPosition.First \nFirst \nCliPosition.Unspecified \nUnspecified \nCliPosition.Last \nLast"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-cliposition.html#First","title":"CliPosition.First","content":"CliPosition.First \nFirst \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-cliposition.html#Unspecified","title":"CliPosition.Unspecified","content":"CliPosition.Unspecified \nUnspecified \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-cliposition.html#Last","title":"CliPosition.Last","content":"CliPosition.Last \nLast \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-configurationreader.html","title":"ConfigurationReader","content":"ConfigurationReader \n<p class='summary'>\n Configuration reader implementations\n</p> \nConfigurationReader.FromAppSettings \nFromAppSettings \nConfigurationReader.FromAppSettings \nFromAppSettings \nConfigurationReader.FromAppSettingsFile \nFromAppSettingsFile \nConfigurationReader.FromDictionary \nFromDictionary \nConfigurationReader.FromEnvironmentVariables \nFromEnvironmentVariables \nConfigurationReader.FromFunction \nFromFunction \nConfigurationReader.NullReader \nNullReader"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-configurationreader.html#FromAppSettings","title":"ConfigurationReader.FromAppSettings","content":"ConfigurationReader.FromAppSettings \nFromAppSettings \n<p class='summary'>\n Create a configuration reader instance using the location of an assembly file\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-configurationreader.html#FromAppSettings","title":"ConfigurationReader.FromAppSettings","content":"ConfigurationReader.FromAppSettings \nFromAppSettings \n<p class='summary'>\n Create a configuration reader instance using the application's resident AppSettings configuration\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-configurationreader.html#FromAppSettingsFile","title":"ConfigurationReader.FromAppSettingsFile","content":"ConfigurationReader.FromAppSettingsFile \nFromAppSettingsFile \n<p class='summary'>\n Create a configuration reader instance using a local xml App.Config file\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-configurationreader.html#FromDictionary","title":"ConfigurationReader.FromDictionary","content":"ConfigurationReader.FromDictionary \nFromDictionary \n<p class='summary'>\n Create a configuration reader instance using an IDictionary instance\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-configurationreader.html#FromEnvironmentVariables","title":"ConfigurationReader.FromEnvironmentVariables","content":"ConfigurationReader.FromEnvironmentVariables \nFromEnvironmentVariables \n<p class='summary'>\n Create a configuration reader instance using environment variables\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-configurationreader.html#FromFunction","title":"ConfigurationReader.FromFunction","content":"ConfigurationReader.FromFunction \nFromFunction \n<p class='summary'>\n Create a configuration reader instance using an F# function\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-configurationreader.html#NullReader","title":"ConfigurationReader.NullReader","content":"ConfigurationReader.NullReader \nNullReader \n<p class='summary'>\n Create a configuration reader that always returns null\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-customassignmentseparator.html","title":"CustomAssignmentSeparator","content":"CustomAssignmentSeparator \n<p class='summary'>\n Describes the permitted separators between arguments and their values\n</p> \nCustomAssignmentSeparator.Separator \nSeparator \nCustomAssignmentSeparator.TolerateSpacedArguments \nTolerateSpacedArguments"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-customassignmentseparator.html#Separator","title":"CustomAssignmentSeparator.Separator","content":"CustomAssignmentSeparator.Separator \nSeparator \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-customassignmentseparator.html#TolerateSpacedArguments","title":"CustomAssignmentSeparator.TolerateSpacedArguments","content":"CustomAssignmentSeparator.TolerateSpacedArguments \nTolerateSpacedArguments \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-dictionaryconfigurationreader.html","title":"DictionaryConfigurationReader","content":"DictionaryConfigurationReader \n<p class='summary'>\n Configuration reader dictionary proxy\n</p> \nDictionaryConfigurationReader.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-dictionaryconfigurationreader.html#( .ctor )","title":"DictionaryConfigurationReader.( .ctor )","content":"DictionaryConfigurationReader.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-environmentvariableconfigurationreader.html","title":"EnvironmentVariableConfigurationReader","content":"EnvironmentVariableConfigurationReader \n<p class='summary'>\n Environment variable-based configuration reader\n</p> \nEnvironmentVariableConfigurationReader.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-environmentvariableconfigurationreader.html#( .ctor )","title":"EnvironmentVariableConfigurationReader.( .ctor )","content":"EnvironmentVariableConfigurationReader.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-errorcode.html","title":"ErrorCode","content":"ErrorCode \n<p class='summary'>\n Error codes reported by Argu\n</p> \nErrorCode.HelpText \nHelpText \nErrorCode.AppSettings \nAppSettings \nErrorCode.CommandLine \nCommandLine \nErrorCode.PostProcess \nPostProcess"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-errorcode.html#HelpText","title":"ErrorCode.HelpText","content":"ErrorCode.HelpText \nHelpText \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-errorcode.html#AppSettings","title":"ErrorCode.AppSettings","content":"ErrorCode.AppSettings \nAppSettings \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-errorcode.html#CommandLine","title":"ErrorCode.CommandLine","content":"ErrorCode.CommandLine \nCommandLine \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-errorcode.html#PostProcess","title":"ErrorCode.PostProcess","content":"ErrorCode.PostProcess \nPostProcess \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-exceptionexiter.html","title":"ExceptionExiter","content":"ExceptionExiter \n<p class='summary'>\n Handles argument parser errors by raising an exception\n</p> \nExceptionExiter.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-exceptionexiter.html#( .ctor )","title":"ExceptionExiter.( .ctor )","content":"ExceptionExiter.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-functionconfigurationreader.html","title":"FunctionConfigurationReader","content":"FunctionConfigurationReader \n<p class='summary'>\n Function configuration reader proxy\n</p> \nFunctionConfigurationReader.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-functionconfigurationreader.html#( .ctor )","title":"FunctionConfigurationReader.( .ctor )","content":"FunctionConfigurationReader.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-iargparsertemplate.html","title":"IArgParserTemplate","content":"IArgParserTemplate \n<p class='summary'>\n Interface that must be implemented by all Argu template types\n</p> \nIArgParserTemplate.Usage \nUsage"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-iargparsertemplate.html#Usage","title":"IArgParserTemplate.Usage","content":"IArgParserTemplate.Usage \nUsage \n<p class='summary'>\n returns a usage string for every union case\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-iargumentparservisitor-1.html","title":"IArgumentParserVisitor<'R>","content":"IArgumentParserVisitor<'R> \n<p class='summary'>\n Rank-2 function used for accessing typed APIs of untyped parsers\n</p> \nIArgumentParserVisitor<'R>.Visit \nVisit"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-iargumentparservisitor-1.html#Visit","title":"IArgumentParserVisitor<'R>.Visit","content":"IArgumentParserVisitor<'R>.Visit \nVisit \n<p class='summary'>\n     Visit argument parser of generic type.\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>parser</span></dt><dd><p>Supplied argument parser.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-iconfigurationreader.html","title":"IConfigurationReader","content":"IConfigurationReader \n<p class='summary'>\n Abstract key/value configuration reader\n</p> \nIConfigurationReader.GetValue \nGetValue \nIConfigurationReader.Name \nName"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-iconfigurationreader.html#GetValue","title":"IConfigurationReader.GetValue","content":"IConfigurationReader.GetValue \nGetValue \n<p class='summary'>\n Gets value corresponding to supplied key\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-iconfigurationreader.html#Name","title":"IConfigurationReader.Name","content":"IConfigurationReader.Name \nName \n<p class='summary'>\n Configuration reader identifier\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-iexiter.html","title":"IExiter","content":"IExiter \n<p class='summary'>\n An interface for error handling in the argument parser\n</p> \nIExiter.Exit \nExit \nIExiter.Name \nName"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-iexiter.html#Exit","title":"IExiter.Exit","content":"IExiter.Exit \nExit \n<p class='summary'>\n handle error of given message and error code\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-iexiter.html#Name","title":"IExiter.Name","content":"IExiter.Name \nName \n<p class='summary'>\n IExiter identifier\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-nullconfigurationreader.html","title":"NullConfigurationReader","content":"NullConfigurationReader \n<p class='summary'>\n Configuration reader that never returns a value\n</p> \nNullConfigurationReader.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-nullconfigurationreader.html#( .ctor )","title":"NullConfigurationReader.( .ctor )","content":"NullConfigurationReader.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html","title":"ParseResults<'Template>","content":"ParseResults<'Template> \n<p class='summary'>\n Argument parsing result holder.\n</p> \nParseResults<'Template>.Catch \nCatch \nParseResults<'Template>.Contains \nContains \nParseResults<'Template>.Contains \nContains \nParseResults<'Template>.GetAllResults \nGetAllResults \nParseResults<'Template>.GetResult \nGetResult \nParseResults<'Template>.GetResult \nGetResult \nParseResults<'Template>.GetResults \nGetResults \nParseResults<'Template>.GetResults \nGetResults \nParseResults<'Template>.GetSubCommand \nGetSubCommand \nParseResults<'Template>.IterResult \nIterResult \nParseResults<'Template>.IterResults \nIterResults \nParseResults<'Template>.PostProcessResult \nPostProcessResult \nParseResults<'Template>.PostProcessResults \nPostProcessResults \nParseResults<'Template>.Raise \nRaise \nParseResults<'Template>.Raise \nRaise \nParseResults<'Template>.TryGetResult \nTryGetResult \nParseResults<'Template>.TryGetResult \nTryGetResult \nParseResults<'Template>.TryGetSubCommand \nTryGetSubCommand \nParseResults<'Template>.TryPostProcessResult \nTryPostProcessResult \nParseResults<'Template>.UnrecognizedCliParseResults \nUnrecognizedCliParseResults \nParseResults<'Template>.UnrecognizedCliParams \nUnrecognizedCliParams \nParseResults<'Template>.IsUsageRequested \nIsUsageRequested \nParseResults<'Template>.ErrorHandler \nErrorHandler"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#Catch","title":"ParseResults<'Template>.Catch","content":"ParseResults<'Template>.Catch \nCatch \n<p class='summary'>Handles any raised exception through the argument parser's exiter mechanism. Display usage optionally.</p><h4>Parameters</h4><dl><dt><span class='parameter'>f</span></dt><dd><p>The operation to be executed.</p></dd><dt><span class='parameter'>errorCode</span></dt><dd><p>The error code to be returned.</p></dd><dt><span class='parameter'>showUsage</span></dt><dd><p>Print usage together with error message.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#Contains","title":"ParseResults<'Template>.Contains","content":"ParseResults<'Template>.Contains \nContains \n<p class='summary'>Checks if parameter of specific kind has been specified.</p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>The name of the parameter, expressed as quotation of DU constructor.</p></dd><dt><span class='parameter'>source</span></dt><dd><p>Optional source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#Contains","title":"ParseResults<'Template>.Contains","content":"ParseResults<'Template>.Contains \nContains \n<p class='summary'>Checks if parameter of specific kind has been specified.</p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>The name of the parameter, expressed as quotation of DU constructor.</p></dd><dt><span class='parameter'>source</span></dt><dd><p>Optional source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#GetAllResults","title":"ParseResults<'Template>.GetAllResults","content":"ParseResults<'Template>.GetAllResults \nGetAllResults \n<p class='summary'>Gets all parse results.</p><h4>Parameters</h4><dl><dt><span class='parameter'>source</span></dt><dd><p>Optional source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#GetResult","title":"ParseResults<'Template>.GetResult","content":"ParseResults<'Template>.GetResult \nGetResult \n<p class='summary'>Returns the *last* specified parameter of given type.\n          Command line parameters have precedence over AppSettings parameters.</p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>The name of the parameter, expressed as quotation of DU constructor.</p></dd><dt><span class='parameter'>defaultValue</span></dt><dd><p>Return this of no parameter of specific kind has been specified.</p></dd><dt><span class='parameter'>source</span></dt><dd><p>Optional source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#GetResult","title":"ParseResults<'Template>.GetResult","content":"ParseResults<'Template>.GetResult \nGetResult \n<p class='summary'>Returns the *last* specified parameter of given type.\n          Command line parameters have precedence over AppSettings parameters.</p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>The name of the parameter, expressed as quotation of DU constructor.</p></dd><dt><span class='parameter'>defaultValue</span></dt><dd><p>Return this of no parameter of specific kind has been specified.</p></dd><dt><span class='parameter'>source</span></dt><dd><p>Optional source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#GetResults","title":"ParseResults<'Template>.GetResults","content":"ParseResults<'Template>.GetResults \nGetResults \n<p class='summary'>Query parse results for argument with parameters.</p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>The name of the parameter, expressed as quotation of DU constructor.</p></dd><dt><span class='parameter'>source</span></dt><dd><p>Optional source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#GetResults","title":"ParseResults<'Template>.GetResults","content":"ParseResults<'Template>.GetResults \nGetResults \n<p class='summary'>Query parse results for parameterless argument.</p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>The name of the parameter, expressed as quotation of DU constructor.</p></dd><dt><span class='parameter'>source</span></dt><dd><p>Optional source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#GetSubCommand","title":"ParseResults<'Template>.GetSubCommand","content":"ParseResults<'Template>.GetSubCommand \nGetSubCommand \n<p class='summary'>\n     Attempts to recover the subcommand parameter from the results,\n     if one has been specified.\n </p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#IterResult","title":"ParseResults<'Template>.IterResult","content":"ParseResults<'Template>.IterResult \nIterResult \n<p class='summary'>\n     Iterates through the *last* parse result for a given argument kind.\n     Command line parameters have precedence over AppSettings parameters.\n     Results are passed to an iterator function that is error handled by the parser.\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>The name of the parameter, expressed as quotation of DU constructor.</p></dd><dt><span class='parameter'>iterator</span></dt><dd><p>The iterator body.</p></dd><dt><span class='parameter'>source</span></dt><dd><p>Option source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#IterResults","title":"ParseResults<'Template>.IterResults","content":"ParseResults<'Template>.IterResults \nIterResults \n<p class='summary'>\n     Iterates through *all* parse results for a given argument kind.\n     Command line parameters have precedence over AppSettings parameters.\n     Results are passed to an iterator function that is error handled by the parser.\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>The name of the parameter, expressed as quotation of DU constructor.</p></dd><dt><span class='parameter'>iterator</span></dt><dd><p>The iterator body.</p></dd><dt><span class='parameter'>source</span></dt><dd><p>Option source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#PostProcessResult","title":"ParseResults<'Template>.PostProcessResult","content":"ParseResults<'Template>.PostProcessResult \nPostProcessResult \n<p class='summary'>Returns the *last* specified parameter of given type.\n          Command line parameters have precedence over AppSettings parameters.\n          Results are passed to a post-processing function that is error handled by the parser.\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>The name of the parameter, expressed as quotation of DU constructor.</p></dd><dt><span class='parameter'>parser</span></dt><dd><p>The post-processing parser.</p></dd><dt><span class='parameter'>source</span></dt><dd><p>Optional source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#PostProcessResults","title":"ParseResults<'Template>.PostProcessResults","content":"ParseResults<'Template>.PostProcessResults \nPostProcessResults \n<p class='summary'>Query parse results for given argument kind.\n          Command line parameters have precedence over AppSettings parameters.\n          Results are passed to a post-processing function that is error handled by the parser.\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>The name of the parameter, expressed as quotation of DU constructor.</p></dd><dt><span class='parameter'>parser</span></dt><dd><p>The post-processing parser.</p></dd><dt><span class='parameter'>source</span></dt><dd><p>Optional source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#Raise","title":"ParseResults<'Template>.Raise","content":"ParseResults<'Template>.Raise \nRaise \n<p class='summary'>Raise an error through the argument parser's exiter mechanism. Display usage optionally.</p><h4>Parameters</h4><dl><dt><span class='parameter'>error</span></dt><dd><p>The error to be displayed.</p></dd><dt><span class='parameter'>errorCode</span></dt><dd><p>The error code to be returned.</p></dd><dt><span class='parameter'>showUsage</span></dt><dd><p>Print usage together with error message.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#Raise","title":"ParseResults<'Template>.Raise","content":"ParseResults<'Template>.Raise \nRaise \n<p class='summary'>Raise an error through the argument parser's exiter mechanism. Display usage optionally.</p><h4>Parameters</h4><dl><dt><span class='parameter'>msg</span></dt><dd><p>The error message to be displayed.</p></dd><dt><span class='parameter'>errorCode</span></dt><dd><p>The error code to be returned.</p></dd><dt><span class='parameter'>showUsage</span></dt><dd><p>Print usage together with error message.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#TryGetResult","title":"ParseResults<'Template>.TryGetResult","content":"ParseResults<'Template>.TryGetResult \nTryGetResult \n<p class='summary'>Returns the *last* specified parameter of given type, if it exists.\n          Command line parameters have precedence over AppSettings parameters.</p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>The name of the parameter, expressed as quotation of DU constructor.</p></dd><dt><span class='parameter'>source</span></dt><dd><p>Optional source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#TryGetResult","title":"ParseResults<'Template>.TryGetResult","content":"ParseResults<'Template>.TryGetResult \nTryGetResult \n<p class='summary'>Returns the *last* specified parameter of given type, if it exists.\n          Command line parameters have precedence over AppSettings parameters.</p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>The name of the parameter, expressed as quotation of DU constructor.</p></dd><dt><span class='parameter'>source</span></dt><dd><p>Optional source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#TryGetSubCommand","title":"ParseResults<'Template>.TryGetSubCommand","content":"ParseResults<'Template>.TryGetSubCommand \nTryGetSubCommand \n<p class='summary'>\n     Attempts to recover the subcommand parameter from the results,\n     if one has been specified.\n </p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#TryPostProcessResult","title":"ParseResults<'Template>.TryPostProcessResult","content":"ParseResults<'Template>.TryPostProcessResult \nTryPostProcessResult \n<p class='summary'>Returns the *last* specified parameter of given type.\n          Command line parameters have precedence over AppSettings parameters.\n          Results are passed to a post-processing function that is error handled by the parser.\n </p><h4>Parameters</h4><dl><dt><span class='parameter'>expr</span></dt><dd><p>The name of the parameter, expressed as quotation of DU constructor.</p></dd><dt><span class='parameter'>parser</span></dt><dd><p>The post-processing parser.</p></dd><dt><span class='parameter'>source</span></dt><dd><p>Optional source restriction: AppSettings or CommandLine.</p></dd></dl>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#UnrecognizedCliParseResults","title":"ParseResults<'Template>.UnrecognizedCliParseResults","content":"ParseResults<'Template>.UnrecognizedCliParseResults \nUnrecognizedCliParseResults \n<p class='summary'>\n Gets all parse results that are not part of the current parsing context\n This is only applicable to subcommand parsing operations\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#UnrecognizedCliParams","title":"ParseResults<'Template>.UnrecognizedCliParams","content":"ParseResults<'Template>.UnrecognizedCliParams \nUnrecognizedCliParams \n<p class='summary'>\n Gets all unrecognized CLI parameters which\n accumulates if parsed with 'ignoreUnrecognized = true'\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#IsUsageRequested","title":"ParseResults<'Template>.IsUsageRequested","content":"ParseResults<'Template>.IsUsageRequested \nIsUsageRequested \n<p class='summary'>\n Returns true if '--help' parameter has been specified in the command line.\n</p>"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parseresults-1.html#ErrorHandler","title":"ParseResults<'Template>.ErrorHandler","content":"ParseResults<'Template>.ErrorHandler \nErrorHandler \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parsesource.html","title":"ParseSource","content":"ParseSource \n<p class='summary'>\n Source from which to parse arguments\n</p> \nParseSource.None \nNone \nParseSource.AppSettings \nAppSettings \nParseSource.CommandLine \nCommandLine \nParseSource.All \nAll"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parsesource.html#None","title":"ParseSource.None","content":"ParseSource.None \nNone \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parsesource.html#AppSettings","title":"ParseSource.AppSettings","content":"ParseSource.AppSettings \nAppSettings \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parsesource.html#CommandLine","title":"ParseSource.CommandLine","content":"ParseSource.CommandLine \nCommandLine \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-parsesource.html#All","title":"ParseSource.All","content":"ParseSource.All \nAll \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-processexiter.html","title":"ProcessExiter","content":"ProcessExiter \n<p class='summary'>\n Handles argument parser errors by exiting the process\n after printing a parse error.\n</p> \nProcessExiter.( .ctor ) \n( .ctor ) \nProcessExiter.( .ctor ) \n( .ctor ) \nProcessExiter.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-processexiter.html#( .ctor )","title":"ProcessExiter.( .ctor )","content":"ProcessExiter.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-processexiter.html#( .ctor )","title":"ProcessExiter.( .ctor )","content":"ProcessExiter.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-processexiter.html#( .ctor )","title":"ProcessExiter.( .ctor )","content":"ProcessExiter.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-altcommandlineattribute.html","title":"AltCommandLineAttribute","content":"AltCommandLineAttribute \n<p class='summary'>\n Declares a set of secondary CLI identifiers for the current parameter.\n Does not replace the default identifier which is either auto-generated\n or specified by the CustomCommandLine attribute.\n</p> \nAltCommandLineAttribute.( .ctor ) \n( .ctor ) \nAltCommandLineAttribute.Names \nNames"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-altcommandlineattribute.html#( .ctor )","title":"AltCommandLineAttribute.( .ctor )","content":"AltCommandLineAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-altcommandlineattribute.html#Names","title":"AltCommandLineAttribute.Names","content":"AltCommandLineAttribute.Names \nNames \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-appsettingsseparatorattribute.html","title":"AppSettingsSeparatorAttribute","content":"AppSettingsSeparatorAttribute \n<p class='summary'>\n Specify a custom value separator in AppSettings parsing parameters.\n Used in CSV or list-based parameter parsing.\n</p> \nAppSettingsSeparatorAttribute.( .ctor ) \n( .ctor ) \nAppSettingsSeparatorAttribute.( .ctor ) \n( .ctor ) \nAppSettingsSeparatorAttribute.SplitOptions \nSplitOptions \nAppSettingsSeparatorAttribute.Separators \nSeparators"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-appsettingsseparatorattribute.html#( .ctor )","title":"AppSettingsSeparatorAttribute.( .ctor )","content":"AppSettingsSeparatorAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-appsettingsseparatorattribute.html#( .ctor )","title":"AppSettingsSeparatorAttribute.( .ctor )","content":"AppSettingsSeparatorAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-appsettingsseparatorattribute.html#SplitOptions","title":"AppSettingsSeparatorAttribute.SplitOptions","content":"AppSettingsSeparatorAttribute.SplitOptions \nSplitOptions \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-appsettingsseparatorattribute.html#Separators","title":"AppSettingsSeparatorAttribute.Separators","content":"AppSettingsSeparatorAttribute.Separators \nSeparators \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-clipositionattribute.html","title":"CliPositionAttribute","content":"CliPositionAttribute \n<p class='summary'>\n Declares that argument should be placed at specific position.\n</p> \nCliPositionAttribute.( .ctor ) \n( .ctor ) \nCliPositionAttribute.Position \nPosition"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-clipositionattribute.html#( .ctor )","title":"CliPositionAttribute.( .ctor )","content":"CliPositionAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-clipositionattribute.html#Position","title":"CliPositionAttribute.Position","content":"CliPositionAttribute.Position \nPosition \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-cliprefixattribute.html","title":"CliPrefixAttribute","content":"CliPrefixAttribute \n<p class='summary'>\n Specifies a custom prefix for auto-generated CLI names.\n This defaults to double dash ('--').\n</p> \nCliPrefixAttribute.( .ctor ) \n( .ctor ) \nCliPrefixAttribute.Prefix \nPrefix"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-cliprefixattribute.html#( .ctor )","title":"CliPrefixAttribute.( .ctor )","content":"CliPrefixAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-cliprefixattribute.html#Prefix","title":"CliPrefixAttribute.Prefix","content":"CliPrefixAttribute.Prefix \nPrefix \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-colonassignmentattribute.html","title":"ColonAssignmentAttribute","content":"ColonAssignmentAttribute \n<p class='summary'>\n Use '--param:arg' or '--param key:value' assignment syntax in CLI.\n Requires that the argument should have parameters of arity 1 or 2 only.\n</p> \nColonAssignmentAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-colonassignmentattribute.html#( .ctor )","title":"ColonAssignmentAttribute.( .ctor )","content":"ColonAssignmentAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-colonassignmentorspacedattribute.html","title":"ColonAssignmentOrSpacedAttribute","content":"ColonAssignmentOrSpacedAttribute \n<p class='summary'>\n Use '--param:arg' assignment syntax in CLI.\n Parameters can also be assigned using space as separator e.g. '--param arg'\n Requires that the argument should have parameters of arity 1 only.\n</p> \nColonAssignmentOrSpacedAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-colonassignmentorspacedattribute.html#( .ctor )","title":"ColonAssignmentOrSpacedAttribute.( .ctor )","content":"ColonAssignmentOrSpacedAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-customappsettingsattribute.html","title":"CustomAppSettingsAttribute","content":"CustomAppSettingsAttribute \n<p class='summary'>\n Declares a custom key identifier for the current parameter in AppSettings parsing.\n Replaces the auto-generated identifier name.\n</p> \nCustomAppSettingsAttribute.( .ctor ) \n( .ctor ) \nCustomAppSettingsAttribute.Name \nName"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-customappsettingsattribute.html#( .ctor )","title":"CustomAppSettingsAttribute.( .ctor )","content":"CustomAppSettingsAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-customappsettingsattribute.html#Name","title":"CustomAppSettingsAttribute.Name","content":"CustomAppSettingsAttribute.Name \nName \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-customassignmentattribute.html","title":"CustomAssignmentAttribute","content":"CustomAssignmentAttribute \n<p class='summary'>\n Use a custom separator for parameter assignment.\n e.g. '--param<separator>arg' or '--param key<separator>value'.\n Requires that the argument should have parameters of arity 1 or 2 only.\n Can be used to specify any assignment separator.\n</p> \nCustomAssignmentAttribute.( .ctor ) \n( .ctor ) \nCustomAssignmentAttribute.Separator \nSeparator"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-customassignmentattribute.html#( .ctor )","title":"CustomAssignmentAttribute.( .ctor )","content":"CustomAssignmentAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-customassignmentattribute.html#Separator","title":"CustomAssignmentAttribute.Separator","content":"CustomAssignmentAttribute.Separator \nSeparator \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-customassignmentorspacedattribute.html","title":"CustomAssignmentOrSpacedAttribute","content":"CustomAssignmentOrSpacedAttribute \n<p class='summary'>\n Use a custom separator for parameter assignment.\n e.g. '--param<separator>arg'\n Parameters can also be assigned using space as separator e.g. '--param arg'\n Requires that the argument should have parameters of arity 1 only.\n Can be used to specify any assignment separator.\n</p> \nCustomAssignmentOrSpacedAttribute.( .ctor ) \n( .ctor ) \nCustomAssignmentOrSpacedAttribute.Separator \nSeparator"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-customassignmentorspacedattribute.html#( .ctor )","title":"CustomAssignmentOrSpacedAttribute.( .ctor )","content":"CustomAssignmentOrSpacedAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-customassignmentorspacedattribute.html#Separator","title":"CustomAssignmentOrSpacedAttribute.Separator","content":"CustomAssignmentOrSpacedAttribute.Separator \nSeparator \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-customcommandlineattribute.html","title":"CustomCommandLineAttribute","content":"CustomCommandLineAttribute \n<p class='summary'>\n Declares a custom default CLI identifier for the current parameter.\n Replaces the auto-generated identifier name.\n</p> \nCustomCommandLineAttribute.( .ctor ) \n( .ctor ) \nCustomCommandLineAttribute.Name \nName \nCustomCommandLineAttribute.AltNames \nAltNames"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-customcommandlineattribute.html#( .ctor )","title":"CustomCommandLineAttribute.( .ctor )","content":"CustomCommandLineAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-customcommandlineattribute.html#Name","title":"CustomCommandLineAttribute.Name","content":"CustomCommandLineAttribute.Name \nName \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-customcommandlineattribute.html#AltNames","title":"CustomCommandLineAttribute.AltNames","content":"CustomCommandLineAttribute.AltNames \nAltNames \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-disablehelpflagsattribute.html","title":"DisableHelpFlagsAttribute","content":"DisableHelpFlagsAttribute \n<p class='summary'>\n Specifies that Help/Usage switches should be disabled for the CLI.\n</p> \nDisableHelpFlagsAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-disablehelpflagsattribute.html#( .ctor )","title":"DisableHelpFlagsAttribute.( .ctor )","content":"DisableHelpFlagsAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-equalsassignmentattribute.html","title":"EqualsAssignmentAttribute","content":"EqualsAssignmentAttribute \n<p class='summary'>\n Use '--param=arg' or '--param key=value' assignment syntax in CLI.\n Requires that the argument should have parameters of arity 1 or 2 only.\n</p> \nEqualsAssignmentAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-equalsassignmentattribute.html#( .ctor )","title":"EqualsAssignmentAttribute.( .ctor )","content":"EqualsAssignmentAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-equalsassignmentorspacedattribute.html","title":"EqualsAssignmentOrSpacedAttribute","content":"EqualsAssignmentOrSpacedAttribute \n<p class='summary'>\n Use '--param=arg' assignment syntax in CLI.\n Parameters can also be assigned using space as separator e.g. '--param arg'\n Requires that the argument should have parameters of arity 1 only.\n</p> \nEqualsAssignmentOrSpacedAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-equalsassignmentorspacedattribute.html#( .ctor )","title":"EqualsAssignmentOrSpacedAttribute.( .ctor )","content":"EqualsAssignmentOrSpacedAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-exactlyonceattribute.html","title":"ExactlyOnceAttribute","content":"ExactlyOnceAttribute \n<p class='summary'>\n Demands that the argument should be specified exactly once; a parse exception is raised otherwise.\n Equivalent to attaching both the Mandatory and Unique attribute on the parameter.\n</p> \nExactlyOnceAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-exactlyonceattribute.html#( .ctor )","title":"ExactlyOnceAttribute.( .ctor )","content":"ExactlyOnceAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-firstattribute.html","title":"FirstAttribute","content":"FirstAttribute \n<p class='summary'>\n Declares that argument can only be placed at the beginning of the CLI syntax.\n A parse exception will be raised if that is not the case.\n</p> \nFirstAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-firstattribute.html#( .ctor )","title":"FirstAttribute.( .ctor )","content":"FirstAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-gatherallsourcesattribute.html","title":"GatherAllSourcesAttribute","content":"GatherAllSourcesAttribute \n<p class='summary'>\n Requires that CLI parameters should not override AppSettings parameters.\n Will return parsed results from both AppSettings and CLI.\n</p> \nGatherAllSourcesAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-gatherallsourcesattribute.html#( .ctor )","title":"GatherAllSourcesAttribute.( .ctor )","content":"GatherAllSourcesAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-gatherunrecognizedattribute.html","title":"GatherUnrecognizedAttribute","content":"GatherUnrecognizedAttribute \n<p class='summary'>\n Denotes that the given argument should accummulate any unrecognized arguments it encounters.\n Must contain a single field of type string\n</p> \nGatherUnrecognizedAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-gatherunrecognizedattribute.html#( .ctor )","title":"GatherUnrecognizedAttribute.( .ctor )","content":"GatherUnrecognizedAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-helpdescriptionattribute.html","title":"HelpDescriptionAttribute","content":"HelpDescriptionAttribute \n<p class='summary'>\n Specifies a custom description text for the Help/Usage switches in the usage string.\n</p> \nHelpDescriptionAttribute.( .ctor ) \n( .ctor ) \nHelpDescriptionAttribute.Description \nDescription"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-helpdescriptionattribute.html#( .ctor )","title":"HelpDescriptionAttribute.( .ctor )","content":"HelpDescriptionAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-helpdescriptionattribute.html#Description","title":"HelpDescriptionAttribute.Description","content":"HelpDescriptionAttribute.Description \nDescription \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-helpflagsattribute.html","title":"HelpFlagsAttribute","content":"HelpFlagsAttribute \n<p class='summary'>\n Specifies a custom set of Help/Usage switches for the CLI.\n</p> \nHelpFlagsAttribute.( .ctor ) \n( .ctor ) \nHelpFlagsAttribute.Names \nNames"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-helpflagsattribute.html#( .ctor )","title":"HelpFlagsAttribute.( .ctor )","content":"HelpFlagsAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-helpflagsattribute.html#Names","title":"HelpFlagsAttribute.Names","content":"HelpFlagsAttribute.Names \nNames \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-hiddenattribute.html","title":"HiddenAttribute","content":"HiddenAttribute \n<p class='summary'>\n Hides argument from command line argument usage string.\n</p> \nHiddenAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-hiddenattribute.html#( .ctor )","title":"HiddenAttribute.( .ctor )","content":"HiddenAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-inheritattribute.html","title":"InheritAttribute","content":"InheritAttribute \n<p class='summary'>\n Denotes that the given argument should be inherited in the scope of any subcommands.\n</p> \nInheritAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-inheritattribute.html#( .ctor )","title":"InheritAttribute.( .ctor )","content":"InheritAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-lastattribute.html","title":"LastAttribute","content":"LastAttribute \n<p class='summary'>\n Declares that argument can only be placed at the end of the CLI syntax.\n A parse exception will be raised if that is not the case.\n</p> \nLastAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-lastattribute.html#( .ctor )","title":"LastAttribute.( .ctor )","content":"LastAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-maincommandattribute.html","title":"MainCommandAttribute","content":"MainCommandAttribute \n<p class='summary'>\n Declares that argument is the main command of the CLI syntax.\n Arguments are specified without requiring a switch.\n</p> \nMainCommandAttribute.( .ctor ) \n( .ctor ) \nMainCommandAttribute.( .ctor ) \n( .ctor ) \nMainCommandAttribute.ArgumentName \nArgumentName"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-maincommandattribute.html#( .ctor )","title":"MainCommandAttribute.( .ctor )","content":"MainCommandAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-maincommandattribute.html#( .ctor )","title":"MainCommandAttribute.( .ctor )","content":"MainCommandAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-maincommandattribute.html#ArgumentName","title":"MainCommandAttribute.ArgumentName","content":"MainCommandAttribute.ArgumentName \nArgumentName \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-mandatoryattribute.html","title":"MandatoryAttribute","content":"MandatoryAttribute \n<p class='summary'>\n Demands at least one parsed result for this argument; a parse exception is raised otherwise.\n</p> \nMandatoryAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-mandatoryattribute.html#( .ctor )","title":"MandatoryAttribute.( .ctor )","content":"MandatoryAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-noappsettingsattribute.html","title":"NoAppSettingsAttribute","content":"NoAppSettingsAttribute \n<p class='summary'>\n Disable AppSettings parsing for this branch. Use for CLI parsing only.\n</p> \nNoAppSettingsAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-noappsettingsattribute.html#( .ctor )","title":"NoAppSettingsAttribute.( .ctor )","content":"NoAppSettingsAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-nocommandlineattribute.html","title":"NoCommandLineAttribute","content":"NoCommandLineAttribute \n<p class='summary'>\n Disable CLI parsing for this argument. Use for AppSettings parsing only.\n</p> \nNoCommandLineAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-nocommandlineattribute.html#( .ctor )","title":"NoCommandLineAttribute.( .ctor )","content":"NoCommandLineAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-parsecsvattribute.html","title":"ParseCSVAttribute","content":"ParseCSVAttribute \n<p class='summary'>\n Parse multiple parameters in AppSettings as comma separated values. OBSOLETE\n</p> \nParseCSVAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-parsecsvattribute.html#( .ctor )","title":"ParseCSVAttribute.( .ctor )","content":"ParseCSVAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-printlabelsattribute.html","title":"PrintLabelsAttribute","content":"PrintLabelsAttribute \n<p class='summary'>\n Print F# 3.1 field labels in usage string. OBSOLETE\n</p> \nPrintLabelsAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-printlabelsattribute.html#( .ctor )","title":"PrintLabelsAttribute.( .ctor )","content":"PrintLabelsAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-requiresubcommandattribute.html","title":"RequireSubcommandAttribute","content":"RequireSubcommandAttribute \n<p class='summary'>\n Demands that at least one subcommand is specified in the CLI; a parse exception is raised otherwise.\n</p> \nRequireSubcommandAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-requiresubcommandattribute.html#( .ctor )","title":"RequireSubcommandAttribute.( .ctor )","content":"RequireSubcommandAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-restattribute.html","title":"RestAttribute","content":"RestAttribute \n<p class='summary'>\n Consume all remaining CLI tokens using this parameter wherever it might occur. OBSOLETE\n</p> \nRestAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-restattribute.html#( .ctor )","title":"RestAttribute.( .ctor )","content":"RestAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-subcommandattribute.html","title":"SubCommandAttribute","content":"SubCommandAttribute \n<p class='summary'>\n Declares that argument is a subcommand.\n A parse exception will be raised if the argument has parameters\n and their type is not ParseResults<_>.\n Implicit if the argument does have a parameter of type ParseResults<_>.\n</p> \nSubCommandAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-subcommandattribute.html#( .ctor )","title":"SubCommandAttribute.( .ctor )","content":"SubCommandAttribute.( .ctor ) \n( .ctor ) \n"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-uniqueattribute.html","title":"UniqueAttribute","content":"UniqueAttribute \n<p class='summary'>\n Demands that the argument should be specified at most once; a parse exception is raised otherwise.\n</p> \nUniqueAttribute.( .ctor ) \n( .ctor )"},{"uri":"http://fsprojects.github.io/Argu//reference/argu-arguattributes-uniqueattribute.html#( .ctor )","title":"UniqueAttribute.( .ctor )","content":"UniqueAttribute.( .ctor ) \n( .ctor ) \n"}]